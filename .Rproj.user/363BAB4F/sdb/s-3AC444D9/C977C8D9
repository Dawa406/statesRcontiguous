{
    "collab_server" : "",
    "contents" : "#' get_shape_files\n#'\n#' \\code{get_us_shape_files} downloads shapefiles from census.gov\n#'\n#' @param resolution Resolution of the requested shapefiles, may only be \"500k\", \"5m\", or \"20m\". Default to \"500k\"\n#' @param year Year for which the shapefiles should be requested, may only be 2013, 2014, or 2015. Default to 2015\n#' @param zip.path Path for zip file downloaded from census.gov, default to shapefiles.zip in the working directory.\n#' @param shapefiles.path Path for shapefiles to be unzipped, default to shapefiles/\n#' @param delete.zip Delete zip or not, default to TRUE.\n#'\n#' @export\nget_us_shape_files <- function(resolution = \"500k\",\n                               year = \"2015\",\n                               zip.path = \"shapefiles.zip\",\n                               shapefiles.path = \"shapefiles/\",\n                               delete.zip = TRUE) {\n  if (is.na(match(resolution, c(\"500k\", \"5m\", \"20m\")))) {\n    stop(\"Resolution must be 500k, 5m or 20m\")\n  }\n\n  if (is.na(match(year, c(\"2015\", \"2014\", \"2013\")))) {\n    stop(\"Year must be 2015, 2014 or 2013\")\n  }\n\n  utils::download.file(\n    url = paste0(\n      \"http://www2.census.gov/geo/tiger/GENZ2015/shp/cb_\",\n      year,\n      \"_us_state_\",\n      resolution,\n      \".zip\"\n    ),\n    destfile = file.path(getwd(), zip.path)\n  )\n  utils::unzip(zipfile = file.path(getwd(), zip.path), exdir = shapefiles.path)\n\n  if (delete.zip) {\n    invisible(file.remove(file.path(getwd(), zip.path)))\n    message(paste(\"Shapefiles downloaded into:\", shapefiles.path))\n  } else\n    message(paste(\"Shapefiles downloaded into:\", shapefiles.path))\n}\n\n#' make_us_contiguous\n#'\n#' \\code{make_us_contiguous} removes states that are not in the contiguous United States, and drops levels from the internal data object.\n#'\n#' @param us_spdf SpatialPolygonDataFeame for the United States, requires @data with column state.fips\n#'\n#' @export\nmake_us_contiguous <- function(us_spdf) {\n  if (is.na(match(\"state.fips\", names(us_spdf@data)))) {\n    stop(\"The SPDF provided does not have us_spdf@data$state.fips\")\n  }\n\n  contiguous_fips_codes <-\n    statesRcontiguous::fips_codes[statesRcontiguous::fips_codes$contiguous.united.states == TRUE, ]$fips.code\n  contiguous_us_spdf <-\n    us_spdf[us_spdf$state.fips %in% contiguous_fips_codes, ]\n  # Drop unnecessary levels\n  contiguous_us_spdf@data <- droplevels(contiguous_us_spdf@data)\n  contiguous_us_spdf\n}\n\n#' make_us_shapefiles\n#'\n#' \\code{make_us_shapefiles} returns shape files from census.gov\n#'\n#' @param resolution Resolution of the shapefiles, may only be \"500k\", \"5m\", or \"20m\". If \\code{download.shapefiles=FALSE} these must already be downloaded. Default to \"500k\"\n#' @param year Year for which the shapefiles should be requested, may only be 2013, 2014, or 2015. If \\code{download.shapefiles=FALSE} these must already be downloaded. Default to 2015\n#' @param shapefiles.path Path for shapefiles, if \\code{download.shapefiles=FALSE} these must already be downloaded. Default to \"shapefiles/\"\n#' @param download.shapefiles Download shapefiles in this function call, rather than separately calling \\code{get_us_shape_files}. Default to TRUE\n#' @param contiguous.only If TRUE the returned SPDF will only contain States in the contiguous United States. Default to TRUE.\n#'\n#' @export\nmake_us_shapefiles <- function(shapefiles.path = \"shapefiles/\",\n                               year = \"2015\",\n                               resolution = \"500k\",\n                               contiguous.only = TRUE,\n                               download.shapefiles = TRUE) {\n  if (download.shapefiles) {\n    get_us_shape_files(\n      resolution = resolution,\n      year = year,\n      zip.path = \"shapefiles.zip\",\n      shapefiles.path = shapefiles.path,\n      delete.zip = TRUE\n    )\n  }\n\n  us_shapefiles <-\n    rgdal::readOGR(\n      dsn = shapefiles.path,\n      layer = paste0(\"cb_\", year, \"_us_state_\", resolution),\n      verbose = F\n    )\n\n  us_shapefiles$STATEFP <- as.character(us_shapefiles$STATEFP)\n  us_shapefiles$STATEFP <- as.numeric(us_shapefiles$STATEFP)\n\n  ## tidy format\n  colnames(us_shapefiles@data) <-\n    tolower(colnames(us_shapefiles@data))\n  ## rename_ as otherwise no visible binding for global variable ‘stusps’\n  us_shapefiles@data <- dplyr::rename_(\n    us_shapefiles@data,\n    \"state.fips\" = \"statefp\",\n    \"state.ns\" = \"statens\",\n    \"geo.id\" = \"geoid\",\n    \"a.land\" = \"aland\",\n    \"a.water\" = \"awater\",\n    \"aff.geo.id\" = \"affgeoid\",\n    \"state.short.name\" = \"stusps\"\n  )\n\n  if (contiguous.only) {\n    make_us_contiguous(us_shapefiles)\n  } else\n    us_shapefiles\n\n}\n",
    "created" : 1482155602425.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1128345987",
    "id" : "C977C8D9",
    "lastKnownWriteTime" : 1482159889,
    "last_content_update" : 1482159889408,
    "path" : "~/Github/statesRcontiguous/R/process-shapefiles.R",
    "project_path" : "R/process-shapefiles.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}